#!/usr/bin/env node

/**
 * Script para sincronizar a documenta√ß√£o Swagger em portugu√™s
 * com a vers√£o em ingl√™s, traduzindo automaticamente
 */

const fs = require('fs');
const path = require('path');

// Fun√ß√£o para traduzir tags
function translateTags(tags) {
  const tagTranslations = {
    'Auth': 'Autentica√ß√£o',
    'Session': 'Sess√£o',
    'Client': 'Cliente', 
    'Message': 'Mensagem',
    'Chat': 'Chat',
    'Group Chat': 'Grupo',
    'Contact': 'Contato',
    'Various': 'Diversos'
  };

  return tags.map(tag => ({
    ...tag,
    name: tagTranslations[tag.name] || tag.name,
    description: translateDescription(tag.description)
  }));
}

// Fun√ß√£o para traduzir descri√ß√µes
function translateDescription(description) {
  const translations = {
    'Handling multiple sessions logic, creation and deletion': 'Gerenciamento de m√∫ltiplas sess√µes, cria√ß√£o e exclus√£o',
    'All functions related to the client': 'Todas as fun√ß√µes relacionadas ao cliente WhatsApp',
    'May fail if the message is too old (Only from the last 100 Messages of the given chat)': 'Pode falhar se a mensagem for muito antiga (Apenas das √∫ltimas 100 mensagens do chat)',
    'Operations related to individual chats': 'Opera√ß√µes relacionadas a chats individuais',
    'Operations related to WhatsApp groups': 'Opera√ß√µes relacionadas a grupos do WhatsApp',
    'Operations related to contacts': 'Opera√ß√µes relacionadas a contatos',
    'Various endpoints and utilities': 'Endpoints diversos e utilit√°rios'
  };

  return translations[description] || description;
}

// Fun√ß√£o para traduzir summaries
function translateSummary(summary) {
  const translations = {
    'Start new session': 'Iniciar Nova Sess√£o',
    'Get session status': 'Obter Status da Sess√£o',
    'Get session QR code': 'Obter C√≥digo QR da Sess√£o',
    'Get session QR code as image': 'Obter C√≥digo QR da Sess√£o como Imagem',
    'Terminate session': 'Encerrar Sess√£o',
    'Terminate inactive sessions': 'Encerrar Sess√µes Inativas',
    'Terminate all sessions': 'Encerrar Todas as Sess√µes',
    'Get class info': 'Obter Informa√ß√µes da Classe',
    'Accept invite': 'Aceitar Convite',
    'Archive chat': 'Arquivar Chat',
    'Create group': 'Criar Grupo',
    'Get blocked contacts': 'Obter Contatos Bloqueados',
    'Get chat by ID': 'Obter Chat por ID',
    'Get chat labels': 'Obter R√≥tulos do Chat',
    'Get chats': 'Obter Chats',
    'Get chats by label ID': 'Obter Chats por ID do R√≥tulo',
    'Get common groups': 'Obter Grupos Comuns',
    'Get contact by ID': 'Obter Contato por ID',
    'Get contacts': 'Obter Contatos',
    'Get invite info': 'Obter Informa√ß√µes do Convite',
    'Get label by ID': 'Obter R√≥tulo por ID',
    'Get labels': 'Obter R√≥tulos',
    'Get number ID': 'Obter ID do N√∫mero',
    'Check if registered user': 'Verificar se Usu√°rio Registrado',
    'Get profile picture URL': 'Obter URL da Foto de Perfil',
    'Get state': 'Obter Estado',
    'Mark chat as unread': 'Marcar Chat como N√£o Lido',
    'Mute chat': 'Silenciar Chat',
    'Pin chat': 'Fixar Chat',
    'Search messages': 'Pesquisar Mensagens',
    'Send message': 'Enviar Mensagem',
    'Send presence available': 'Enviar Presen√ßa Dispon√≠vel',
    'Send presence unavailable': 'Enviar Presen√ßa Indispon√≠vel',
    'Send seen': 'Enviar Visto',
    'Set display name': 'Definir Nome de Exibi√ß√£o',
    'Set profile picture': 'Definir Foto de Perfil',
    'Set status': 'Definir Status',
    'Unarchive chat': 'Desarquivar Chat',
    'Unmute chat': 'Dessilenciar Chat',
    'Unpin chat': 'Desfixar Chat',
    'Get WhatsApp Web version': 'Obter Vers√£o do WhatsApp Web',
    'Clear messages': 'Limpar Mensagens',
    'Clear state': 'Limpar Estado',
    'Delete chat': 'Excluir Chat',
    'Fetch messages': 'Buscar Mensagens',
    'Get contact': 'Obter Contato',
    'Send state recording': 'Enviar Estado Gravando',
    'Send state typing': 'Enviar Estado Digitando',
    'Add participants': 'Adicionar Participantes',
    'Demote participants': 'Rebaixar Participantes',
    'Get invite code': 'Obter C√≥digo de Convite',
    'Leave group': 'Sair do Grupo',
    'Promote participants': 'Promover Participantes',
    'Remove participants': 'Remover Participantes',
    'Revoke invite': 'Revogar Convite',
    'Set description': 'Definir Descri√ß√£o',
    'Set info admins only': 'Definir Informa√ß√µes Apenas para Admins',
    'Set messages admins only': 'Definir Mensagens Apenas para Admins',
    'Set subject': 'Definir Assunto',
    'Delete message': 'Excluir Mensagem',
    'Download media': 'Baixar M√≠dia',
    'Forward message': 'Encaminhar Mensagem',
    'Get message info': 'Obter Informa√ß√µes da Mensagem',
    'Get mentions': 'Obter Men√ß√µes',
    'Get order': 'Obter Pedido',
    'Get payment': 'Obter Pagamento',
    'Get quoted message': 'Obter Mensagem Citada',
    'React to message': 'Reagir √† Mensagem',
    'Reply to message': 'Responder √† Mensagem',
    'Star message': 'Favoritar Mensagem',
    'Unstar message': 'Desfavoritar Mensagem',
    'Block contact': 'Bloquear Contato',
    'Get about': 'Obter Sobre',
    'Get chat': 'Obter Chat',
    'Unblock contact': 'Desbloquear Contato',
    'Get formatted number': 'Obter N√∫mero Formatado',
    'Get country code': 'Obter C√≥digo do Pa√≠s',
    'Get profile picture URL': 'Obter URL da Foto de Perfil',
    'Check API status': 'Verificar Status da API',
    'Local callback example': 'Exemplo de Webhook Local',
    'Cache status': 'Status do Cache',
    'Clear cache': 'Limpar Cache',
    'Criar novo usu√°rio': 'Criar Novo Usu√°rio',
    'Autenticar usu√°rio': 'Autenticar Usu√°rio',
    'Renovar token de acesso': 'Renovar Token de Acesso',
    'Revogar token de acesso': 'Revogar Token de Acesso',
    'Verificar token de acesso': 'Verificar Token de Acesso',
    'Listar todos os usu√°rios': 'Listar Todos os Usu√°rios',
    'Obter usu√°rio espec√≠fico': 'Obter Usu√°rio Espec√≠fico',
    'Atualizar usu√°rio': 'Atualizar Usu√°rio',
    'Deletar usu√°rio': 'Deletar Usu√°rio',
    'Listar tokens do usu√°rio': 'Listar Tokens do Usu√°rio',
    'Listar sess√µes do usu√°rio': 'Listar Sess√µes do Usu√°rio'
  };

  return translations[summary] || summary;
}

// Fun√ß√£o para traduzir descriptions
function translateDescriptions(description) {
  const translations = {
    'Starts a session for the given session ID.': 'Inicia uma nova sess√£o para o ID de sess√£o fornecido.',
    'Status of the session with the given session ID.': 'Status da sess√£o com o ID de sess√£o fornecido.',
    'QR code of the session with the given session ID.': 'C√≥digo QR da sess√£o com o ID de sess√£o fornecido.',
    'QR code as image of the session with the given session ID.': 'C√≥digo QR como imagem da sess√£o com o ID de sess√£o fornecido.',
    'Terminates the session with the given session ID.': 'Encerra a sess√£o com o ID de sess√£o fornecido.',
    'Terminates all inactive sessions.': 'Encerra todas as sess√µes inativas.',
    'Terminates all sessions.': 'Encerra todas as sess√µes.',
    'Check if the server is alive': 'Verifica se a API est√° funcionando corretamente',
    'Example endpoint for receiving webhooks locally (for testing)': 'Endpoint de exemplo para receber webhooks localmente (para testes)',
    'Get cache system status and statistics': 'Obter status do sistema de cache e estat√≠sticas',
    'Clear all cache data': 'Limpar todos os dados do cache'
  };

  return translations[description] || description;
}

// Fun√ß√£o principal
function syncSwaggerPT() {
  try {
    console.log('üîÑ Sincronizando documenta√ß√£o Swagger em portugu√™s...');

    // Ler arquivo em ingl√™s
    const enPath = path.join(__dirname, '..', 'swagger.json');
    const enContent = fs.readFileSync(enPath, 'utf8');
    const enSwagger = JSON.parse(enContent);

    // Criar vers√£o em portugu√™s
    const ptSwagger = {
      ...enSwagger,
      info: {
        ...enSwagger.info,
        title: 'WhatsApp API',
        description: 'API Wrapper para WhatsAppWebJS - Interface REST para interagir com o WhatsApp Web'
      },
      tags: translateTags(enSwagger.tags || [])
    };

    // Traduzir paths
    if (ptSwagger.paths) {
      Object.keys(ptSwagger.paths).forEach(path => {
        Object.keys(ptSwagger.paths[path]).forEach(method => {
          const endpoint = ptSwagger.paths[path][method];
          
          if (endpoint.summary) {
            endpoint.summary = translateSummary(endpoint.summary);
          }
          
          if (endpoint.description) {
            endpoint.description = translateDescriptions(endpoint.description);
          }

          // Traduzir tags
          if (endpoint.tags) {
            endpoint.tags = endpoint.tags.map(tag => {
                          const tagTranslations = {
              'Auth': 'Autentica√ß√£o',
              'Session': 'Sess√£o',
              'Client': 'Cliente',
              'Message': 'Mensagem',
              'Chat': 'Chat',
              'Group Chat': 'Grupo',
              'Contact': 'Contato',
              'Various': 'Diversos'
            };
              return tagTranslations[tag] || tag;
            });
          }
        });
      });
    }

    // Salvar arquivo em portugu√™s
    const ptPath = path.join(__dirname, '..', 'swagger-pt.json');
    fs.writeFileSync(ptPath, JSON.stringify(ptSwagger, null, 2), 'utf8');

    console.log('‚úÖ Documenta√ß√£o em portugu√™s sincronizada com sucesso!');
    console.log(`üìä Linhas: ${enSwagger.paths ? Object.keys(enSwagger.paths).length : 0} endpoints`);

  } catch (error) {
    console.error('‚ùå Erro ao sincronizar documenta√ß√£o:', error.message);
    process.exit(1);
  }
}

// Executar sincroniza√ß√£o
syncSwaggerPT(); 